plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.72'
}
repositories {
    mavenCentral()
    jcenter()
}
group 'com.github.mkojima'
version '0.0.1'

apply plugin: 'maven-publish'

kotlin {
    jvm()
    js {
        browser {
        }
        nodejs {
        }
    }
    // For ARM, should be changed to iosArm32 or iosArm64
    // For Linux, should be changed to e.g. linuxX64
    // For MacOS, should be changed to e.g. macosX64
    // For Windows, should be changed to e.g. mingwX64
    macosX64("macos")
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation "io.mockk:mockk:1.9.3"
                implementation "org.spekframework.spek2:spek-dsl-metadata:2.0.11"
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation "org.spekframework.spek2:spek-dsl-jvm:2.0.11"

                runtimeOnly "org.spekframework.spek2:spek-runner-junit5:2.0.11"
                runtimeOnly kotlin('reflect')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        macosMain {
        }
        macosTest {
        }
    }
}

jvmTest {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

publishing {
    publications {
        kotlinMultiplatform {
            artifactId = 'mpp-sample'
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            // def releasesRepoUrl = "$buildDir/repos/releases"
            // def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            // url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}